# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import recommendation_pb2 as recommendation__pb2


class RecommendationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecommendBook = channel.unary_unary(
            "/Recommendations/RecommendBook",
            request_serializer=recommendation__pb2.RecommendationRequest.SerializeToString,
            response_deserializer=recommendation__pb2.RecommendationResponse.FromString,
        )
        self.GetAllBooksRecommend = channel.unary_unary(
            "/Recommendations/GetAllBooksRecommend",
            request_serializer=recommendation__pb2.GetAllBookRecommendationRequest.SerializeToString,
            response_deserializer=recommendation__pb2.GetAllBookRecommendationResponse.FromString,
        )
        self.CreateBook = channel.unary_unary(
            "/Recommendations/CreateBook",
            request_serializer=recommendation__pb2.CreateBookRequest.SerializeToString,
            response_deserializer=recommendation__pb2.CreateBookResponse.FromString,
        )
        self.UpdateBook = channel.unary_unary(
            "/Recommendations/UpdateBook",
            request_serializer=recommendation__pb2.UpdateBookRequest.SerializeToString,
            response_deserializer=recommendation__pb2.UpdateBookResponse.FromString,
        )
        self.DeleteBook = channel.unary_unary(
            "/Recommendations/DeleteBook",
            request_serializer=recommendation__pb2.DeleteBookRequest.SerializeToString,
            response_deserializer=recommendation__pb2.DeleteBookResponse.FromString,
        )


class RecommendationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RecommendBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAllBooksRecommend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_RecommendationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "RecommendBook": grpc.unary_unary_rpc_method_handler(
            servicer.RecommendBook,
            request_deserializer=recommendation__pb2.RecommendationRequest.FromString,
            response_serializer=recommendation__pb2.RecommendationResponse.SerializeToString,
        ),
        "GetAllBooksRecommend": grpc.unary_unary_rpc_method_handler(
            servicer.GetAllBooksRecommend,
            request_deserializer=recommendation__pb2.GetAllBookRecommendationRequest.FromString,
            response_serializer=recommendation__pb2.GetAllBookRecommendationResponse.SerializeToString,
        ),
        "CreateBook": grpc.unary_unary_rpc_method_handler(
            servicer.CreateBook,
            request_deserializer=recommendation__pb2.CreateBookRequest.FromString,
            response_serializer=recommendation__pb2.CreateBookResponse.SerializeToString,
        ),
        "UpdateBook": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateBook,
            request_deserializer=recommendation__pb2.UpdateBookRequest.FromString,
            response_serializer=recommendation__pb2.UpdateBookResponse.SerializeToString,
        ),
        "DeleteBook": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteBook,
            request_deserializer=recommendation__pb2.DeleteBookRequest.FromString,
            response_serializer=recommendation__pb2.DeleteBookResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "Recommendations", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Recommendations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RecommendBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Recommendations/RecommendBook",
            recommendation__pb2.RecommendationRequest.SerializeToString,
            recommendation__pb2.RecommendationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAllBooksRecommend(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Recommendations/GetAllBooksRecommend",
            recommendation__pb2.GetAllBookRecommendationRequest.SerializeToString,
            recommendation__pb2.GetAllBookRecommendationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Recommendations/CreateBook",
            recommendation__pb2.CreateBookRequest.SerializeToString,
            recommendation__pb2.CreateBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Recommendations/UpdateBook",
            recommendation__pb2.UpdateBookRequest.SerializeToString,
            recommendation__pb2.UpdateBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Recommendations/DeleteBook",
            recommendation__pb2.DeleteBookRequest.SerializeToString,
            recommendation__pb2.DeleteBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
